## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeVector <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(mm) m <<- mm
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cachemean <- function(x=matrix(), ...) {
m <- x$getinverse
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data)%*%data
x$setinverse(m)
m
}
mat1 <-matrix(seq(1:6),2)
mat1
mat1<-matrix(seq(1:4),2)
makevector(mat1)
makeVector(mat1)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeVector <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(mm) m <<- mm
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cachemean <- function(x=matrix(), ...) {
m <- x$getinverse
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data)
x$setinverse(m)
m
}
cachemean(makeVector(mat1))
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeVector <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(mm) m <<- mm
getinverse <- function(m)
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cachemean <- function(x=matrix(), ...) {
m <- x$getinverse
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data)
x$setinverse(m)
m
}
cachemean(makeVector(mat1))
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeVector <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(mm) m <<- mm
getinverse <- function()m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cachemean <- function(x=matrix(), ...) {
m <- x$getinverse
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data)
x$setinverse(m)
m
}
cachemean(makeVector(mat1))
cachemean(mat1)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(mm) m <<- mm
getinverse <- function()m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cachemean <- function(x=matrix(), ...) {
m <- x$getinverse
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data)
x$setinverse(m)
m
}
cachemean(mat1)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(mm) m <<- mm
getinverse <- function()m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cachemean <- function(x=matrix(), ...) {
m <- getElement(x,getinverse())
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- getElement(x,get())
m <- solve(data)
getElement(x,setinverse(m))
m
}
cachemean(mat1)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(mm) m <<- mm
getinverse <- function()m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cachemean <- function(x=matrix(), ...) {
m <- getElement(x,getinverse)
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- getElement(x,ge)
m <- solve(data)
getElement(x,setinverse(m))
m
}
cachemean(mat1)
cachemean(makeVector(mat1))
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(mm) m <<- mm
getinverse <- function()m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cachemean <- function(x=matrix(), ...) {
m <- getElement(x,getinverse())
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- getElement(x,ge)
m <- solve(data)
getElement(x,setinverse(m))
m
}
cachemean(makeVector(mat1))
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
z<-seq(1:6)
cachemean(makeVector(z))
z<-matrix(seq(1:4),2)
cachmean(makeVector(z))
cachemean(makeVector(z))
